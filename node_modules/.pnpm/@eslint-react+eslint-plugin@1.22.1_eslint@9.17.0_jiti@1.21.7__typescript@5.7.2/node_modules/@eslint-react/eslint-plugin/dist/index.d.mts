import * as _typescript_eslint_utils_ts_eslint from '@typescript-eslint/utils/ts-eslint';

declare const name$b = "@eslint-react/all";
declare const rules$b: {
    readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
    readonly "@eslint-react/no-access-state-in-setstate": "error";
    readonly "@eslint-react/no-array-index-key": "warn";
    readonly "@eslint-react/no-children-count": "warn";
    readonly "@eslint-react/no-children-for-each": "warn";
    readonly "@eslint-react/no-children-map": "warn";
    readonly "@eslint-react/no-children-only": "warn";
    readonly "@eslint-react/no-children-prop": "warn";
    readonly "@eslint-react/no-children-to-array": "warn";
    readonly "@eslint-react/no-class-component": "warn";
    readonly "@eslint-react/no-clone-element": "warn";
    readonly "@eslint-react/no-comment-textnodes": "warn";
    readonly "@eslint-react/no-complex-conditional-rendering": "warn";
    readonly "@eslint-react/no-component-will-mount": "error";
    readonly "@eslint-react/no-component-will-receive-props": "error";
    readonly "@eslint-react/no-component-will-update": "error";
    readonly "@eslint-react/no-context-provider": "warn";
    readonly "@eslint-react/no-create-ref": "error";
    readonly "@eslint-react/no-default-props": "error";
    readonly "@eslint-react/no-direct-mutation-state": "error";
    readonly "@eslint-react/no-duplicate-jsx-props": "warn";
    readonly "@eslint-react/no-duplicate-key": "error";
    readonly "@eslint-react/no-forward-ref": "warn";
    readonly "@eslint-react/no-implicit-key": "warn";
    readonly "@eslint-react/no-missing-component-display-name": "warn";
    readonly "@eslint-react/no-missing-key": "error";
    readonly "@eslint-react/no-nested-components": "error";
    readonly "@eslint-react/no-prop-types": "error";
    readonly "@eslint-react/no-redundant-should-component-update": "error";
    readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
    readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
    readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
    readonly "@eslint-react/no-string-refs": "error";
    readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
    readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
    readonly "@eslint-react/no-unsafe-component-will-update": "warn";
    readonly "@eslint-react/no-unstable-context-value": "warn";
    readonly "@eslint-react/no-unstable-default-props": "warn";
    readonly "@eslint-react/no-unused-class-component-members": "warn";
    readonly "@eslint-react/no-unused-state": "warn";
    readonly "@eslint-react/no-useless-fragment": "warn";
    readonly "@eslint-react/prefer-destructuring-assignment": "warn";
    readonly "@eslint-react/prefer-shorthand-boolean": "warn";
    readonly "@eslint-react/prefer-shorthand-fragment": "warn";
    readonly "@eslint-react/use-jsx-vars": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
    readonly "@eslint-react/dom/no-find-dom-node": "error";
    readonly "@eslint-react/dom/no-missing-button-type": "warn";
    readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-namespace": "error";
    readonly "@eslint-react/dom/no-render-return-value": "error";
    readonly "@eslint-react/dom/no-script-url": "warn";
    readonly "@eslint-react/dom/no-unknown-property": "warn";
    readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
    readonly "@eslint-react/dom/no-void-elements-with-children": "warn";
    readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
    readonly "@eslint-react/web-api/no-leaked-interval": "warn";
    readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
    readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
    readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
    readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect": "warn";
    readonly "@eslint-react/hooks-extra/no-unnecessary-use-callback": "warn";
    readonly "@eslint-react/hooks-extra/no-unnecessary-use-memo": "warn";
    readonly "@eslint-react/hooks-extra/no-useless-custom-hooks": "warn";
    readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
    readonly "@eslint-react/naming-convention/component-name": "warn";
    readonly "@eslint-react/naming-convention/filename": "warn";
    readonly "@eslint-react/naming-convention/filename-extension": "warn";
    readonly "@eslint-react/naming-convention/use-state": "warn";
};
declare const plugins$6: {
    "@eslint-react/debug": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/hooks-extra": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-useless-custom-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-callback-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/naming-convention": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [("CONSTANT_CASE" | "PascalCase") | {
                allowAllCaps?: boolean;
                allowLeadingUnderscore?: boolean;
                allowNamespace?: boolean;
                excepts?: readonly string[];
                rule?: "CONSTANT_CASE" | "PascalCase";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | {
                excepts?: readonly string[];
                extensions?: readonly string[];
                rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [("always" | "as-needed") | {
                allow?: "always" | "as-needed";
                extensions?: readonly string[];
                ignoreFilesWithoutCode?: boolean;
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/web-api": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/dom": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                allowExpressions: boolean;
            }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings$5: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare namespace allConfig {
  export { name$b as name, plugins$6 as plugins, rules$b as rules, settings$5 as settings };
}

declare const name$a = "@eslint-react/core";
declare const rules$a: {
    readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
    readonly "@eslint-react/no-access-state-in-setstate": "error";
    readonly "@eslint-react/no-array-index-key": "warn";
    readonly "@eslint-react/no-children-count": "warn";
    readonly "@eslint-react/no-children-for-each": "warn";
    readonly "@eslint-react/no-children-map": "warn";
    readonly "@eslint-react/no-children-only": "warn";
    readonly "@eslint-react/no-children-to-array": "warn";
    readonly "@eslint-react/no-clone-element": "warn";
    readonly "@eslint-react/no-comment-textnodes": "warn";
    readonly "@eslint-react/no-component-will-mount": "error";
    readonly "@eslint-react/no-component-will-receive-props": "error";
    readonly "@eslint-react/no-component-will-update": "error";
    readonly "@eslint-react/no-context-provider": "warn";
    readonly "@eslint-react/no-create-ref": "error";
    readonly "@eslint-react/no-default-props": "error";
    readonly "@eslint-react/no-direct-mutation-state": "error";
    readonly "@eslint-react/no-duplicate-jsx-props": "warn";
    readonly "@eslint-react/no-duplicate-key": "error";
    readonly "@eslint-react/no-forward-ref": "warn";
    readonly "@eslint-react/no-implicit-key": "warn";
    readonly "@eslint-react/no-missing-key": "error";
    readonly "@eslint-react/no-nested-components": "error";
    readonly "@eslint-react/no-prop-types": "error";
    readonly "@eslint-react/no-redundant-should-component-update": "error";
    readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
    readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
    readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
    readonly "@eslint-react/no-string-refs": "error";
    readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
    readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
    readonly "@eslint-react/no-unsafe-component-will-update": "warn";
    readonly "@eslint-react/no-unstable-context-value": "warn";
    readonly "@eslint-react/no-unstable-default-props": "warn";
    readonly "@eslint-react/no-unused-class-component-members": "warn";
    readonly "@eslint-react/no-unused-state": "warn";
    readonly "@eslint-react/use-jsx-vars": "warn";
};
declare const plugins$5: {
    "@eslint-react": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                allowExpressions: boolean;
            }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings$4: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare namespace coreConfig {
  export { name$a as name, plugins$5 as plugins, rules$a as rules, settings$4 as settings };
}

declare const name$9 = "@eslint-react/debug";
declare const rules$9: {
    readonly "@eslint-react/debug/class-component": "warn";
    readonly "@eslint-react/debug/function-component": "warn";
    readonly "@eslint-react/debug/hook": "warn";
    readonly "@eslint-react/debug/is-from-react": "warn";
};
declare const plugins$4: {
    "@eslint-react/debug": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};

declare namespace debugConfig {
  export { name$9 as name, plugins$4 as plugins, rules$9 as rules };
}

declare const name$8 = "@eslint-react/disable-debug";
declare const rules$8: {
    "@eslint-react/debug/class-component"?: "off";
    "@eslint-react/debug/function-component"?: "off";
    "@eslint-react/debug/hook"?: "off";
    "@eslint-react/debug/is-from-react"?: "off";
};

declare namespace disableDebugConfig {
  export { name$8 as name, rules$8 as rules };
}

declare const name$7 = "@eslint-react/disable-dom";
declare const rules$7: {
    "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
    "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
    "@eslint-react/dom/no-find-dom-node"?: "off";
    "@eslint-react/dom/no-missing-button-type"?: "off";
    "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
    "@eslint-react/dom/no-namespace"?: "off";
    "@eslint-react/dom/no-render-return-value"?: "off";
    "@eslint-react/dom/no-script-url"?: "off";
    "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
    "@eslint-react/dom/no-unsafe-target-blank"?: "off";
    "@eslint-react/dom/no-void-elements-with-children"?: "off";
};

declare namespace disableDomConfig {
  export { name$7 as name, rules$7 as rules };
}

declare const name$6 = "@eslint-react/disable-type-checked";
declare const rules$6: {
    readonly "@eslint-react/no-leaked-conditional-rendering": "off";
    readonly "@eslint-react/prefer-read-only-props": "off";
};

declare namespace disableTypeCheckedConfig {
  export { name$6 as name, rules$6 as rules };
}

declare const name$5 = "@eslint-react/disable-web-api";
declare const rules$5: {
    "@eslint-react/web-api/no-leaked-event-listener"?: "off";
    "@eslint-react/web-api/no-leaked-interval"?: "off";
    "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
    "@eslint-react/web-api/no-leaked-timeout"?: "off";
};

declare namespace disableWebApiConfig {
  export { name$5 as name, rules$5 as rules };
}

declare const name$4 = "@eslint-react/dom";
declare const rules$4: {
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
    readonly "@eslint-react/dom/no-find-dom-node": "error";
    readonly "@eslint-react/dom/no-missing-button-type": "warn";
    readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-namespace": "error";
    readonly "@eslint-react/dom/no-render-return-value": "error";
    readonly "@eslint-react/dom/no-script-url": "warn";
    readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
    readonly "@eslint-react/dom/no-void-elements-with-children": "warn";
};
declare const plugins$3: {
    "@eslint-react/dom": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings$3: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare namespace domConfig {
  export { name$4 as name, plugins$3 as plugins, rules$4 as rules, settings$3 as settings };
}

declare const name$3 = "@eslint-react/off";
declare const rules$3: {
    "@eslint-react/no-leaked-conditional-rendering": "off";
    "@eslint-react/prefer-read-only-props": "off";
    "@eslint-react/ensure-forward-ref-using-ref"?: "off";
    "@eslint-react/no-access-state-in-setstate"?: "off";
    "@eslint-react/no-array-index-key"?: "off";
    "@eslint-react/no-children-count"?: "off";
    "@eslint-react/no-children-for-each"?: "off";
    "@eslint-react/no-children-map"?: "off";
    "@eslint-react/no-children-only"?: "off";
    "@eslint-react/no-children-prop"?: "off";
    "@eslint-react/no-children-to-array"?: "off";
    "@eslint-react/no-class-component"?: "off";
    "@eslint-react/no-clone-element"?: "off";
    "@eslint-react/no-comment-textnodes"?: "off";
    "@eslint-react/no-complex-conditional-rendering"?: "off";
    "@eslint-react/no-component-will-mount"?: "off";
    "@eslint-react/no-component-will-receive-props"?: "off";
    "@eslint-react/no-component-will-update"?: "off";
    "@eslint-react/no-context-provider"?: "off";
    "@eslint-react/no-create-ref"?: "off";
    "@eslint-react/no-default-props"?: "off";
    "@eslint-react/no-direct-mutation-state"?: "off";
    "@eslint-react/no-duplicate-jsx-props"?: "off";
    "@eslint-react/no-duplicate-key"?: "off";
    "@eslint-react/no-forward-ref"?: "off";
    "@eslint-react/no-implicit-key"?: "off";
    "@eslint-react/no-missing-component-display-name"?: "off";
    "@eslint-react/no-missing-key"?: "off";
    "@eslint-react/no-nested-components"?: "off";
    "@eslint-react/no-prop-types"?: "off";
    "@eslint-react/no-redundant-should-component-update"?: "off";
    "@eslint-react/no-set-state-in-component-did-mount"?: "off";
    "@eslint-react/no-set-state-in-component-did-update"?: "off";
    "@eslint-react/no-set-state-in-component-will-update"?: "off";
    "@eslint-react/no-string-refs"?: "off";
    "@eslint-react/no-unsafe-component-will-mount"?: "off";
    "@eslint-react/no-unsafe-component-will-receive-props"?: "off";
    "@eslint-react/no-unsafe-component-will-update"?: "off";
    "@eslint-react/no-unstable-context-value"?: "off";
    "@eslint-react/no-unstable-default-props"?: "off";
    "@eslint-react/no-unused-class-component-members"?: "off";
    "@eslint-react/no-unused-state"?: "off";
    "@eslint-react/no-useless-fragment"?: "off";
    "@eslint-react/prefer-destructuring-assignment"?: "off";
    "@eslint-react/prefer-shorthand-boolean"?: "off";
    "@eslint-react/prefer-shorthand-fragment"?: "off";
    "@eslint-react/use-jsx-vars"?: "off";
    "@eslint-react/dom/no-dangerously-set-innerhtml"?: "off";
    "@eslint-react/dom/no-dangerously-set-innerhtml-with-children"?: "off";
    "@eslint-react/dom/no-find-dom-node"?: "off";
    "@eslint-react/dom/no-missing-button-type"?: "off";
    "@eslint-react/dom/no-missing-iframe-sandbox"?: "off";
    "@eslint-react/dom/no-namespace"?: "off";
    "@eslint-react/dom/no-render-return-value"?: "off";
    "@eslint-react/dom/no-script-url"?: "off";
    "@eslint-react/dom/no-unknown-property"?: "off";
    "@eslint-react/dom/no-unsafe-iframe-sandbox"?: "off";
    "@eslint-react/dom/no-unsafe-target-blank"?: "off";
    "@eslint-react/dom/no-void-elements-with-children"?: "off";
    "@eslint-react/web-api/no-leaked-event-listener"?: "off";
    "@eslint-react/web-api/no-leaked-interval"?: "off";
    "@eslint-react/web-api/no-leaked-resize-observer"?: "off";
    "@eslint-react/web-api/no-leaked-timeout"?: "off";
    "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect"?: "off";
    "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect"?: "off";
    "@eslint-react/hooks-extra/no-unnecessary-use-callback"?: "off";
    "@eslint-react/hooks-extra/no-unnecessary-use-memo"?: "off";
    "@eslint-react/hooks-extra/no-useless-custom-hooks"?: "off";
    "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization"?: "off";
    "@eslint-react/naming-convention/component-name"?: "off";
    "@eslint-react/naming-convention/filename"?: "off";
    "@eslint-react/naming-convention/filename-extension"?: "off";
    "@eslint-react/naming-convention/use-state"?: "off";
};

declare namespace offConfig {
  export { name$3 as name, rules$3 as rules };
}

declare const name$2 = "@eslint-react/recommended";
declare const rules$2: {
    readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
    readonly "@eslint-react/hooks-extra/no-useless-custom-hooks": "warn";
    readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
    readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
    readonly "@eslint-react/web-api/no-leaked-interval": "warn";
    readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
    readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
    readonly "@eslint-react/dom/no-find-dom-node": "error";
    readonly "@eslint-react/dom/no-missing-button-type": "warn";
    readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-namespace": "error";
    readonly "@eslint-react/dom/no-render-return-value": "error";
    readonly "@eslint-react/dom/no-script-url": "warn";
    readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
    readonly "@eslint-react/dom/no-void-elements-with-children": "warn";
    readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
    readonly "@eslint-react/no-access-state-in-setstate": "error";
    readonly "@eslint-react/no-array-index-key": "warn";
    readonly "@eslint-react/no-children-count": "warn";
    readonly "@eslint-react/no-children-for-each": "warn";
    readonly "@eslint-react/no-children-map": "warn";
    readonly "@eslint-react/no-children-only": "warn";
    readonly "@eslint-react/no-children-to-array": "warn";
    readonly "@eslint-react/no-clone-element": "warn";
    readonly "@eslint-react/no-comment-textnodes": "warn";
    readonly "@eslint-react/no-component-will-mount": "error";
    readonly "@eslint-react/no-component-will-receive-props": "error";
    readonly "@eslint-react/no-component-will-update": "error";
    readonly "@eslint-react/no-context-provider": "warn";
    readonly "@eslint-react/no-create-ref": "error";
    readonly "@eslint-react/no-default-props": "error";
    readonly "@eslint-react/no-direct-mutation-state": "error";
    readonly "@eslint-react/no-duplicate-jsx-props": "warn";
    readonly "@eslint-react/no-duplicate-key": "error";
    readonly "@eslint-react/no-forward-ref": "warn";
    readonly "@eslint-react/no-implicit-key": "warn";
    readonly "@eslint-react/no-missing-key": "error";
    readonly "@eslint-react/no-nested-components": "error";
    readonly "@eslint-react/no-prop-types": "error";
    readonly "@eslint-react/no-redundant-should-component-update": "error";
    readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
    readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
    readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
    readonly "@eslint-react/no-string-refs": "error";
    readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
    readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
    readonly "@eslint-react/no-unsafe-component-will-update": "warn";
    readonly "@eslint-react/no-unstable-context-value": "warn";
    readonly "@eslint-react/no-unstable-default-props": "warn";
    readonly "@eslint-react/no-unused-class-component-members": "warn";
    readonly "@eslint-react/no-unused-state": "warn";
    readonly "@eslint-react/use-jsx-vars": "warn";
};
declare const plugins$2: {
    "@eslint-react/debug": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/hooks-extra": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-useless-custom-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-callback-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/naming-convention": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [("CONSTANT_CASE" | "PascalCase") | {
                allowAllCaps?: boolean;
                allowLeadingUnderscore?: boolean;
                allowNamespace?: boolean;
                excepts?: readonly string[];
                rule?: "CONSTANT_CASE" | "PascalCase";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | {
                excepts?: readonly string[];
                extensions?: readonly string[];
                rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [("always" | "as-needed") | {
                allow?: "always" | "as-needed";
                extensions?: readonly string[];
                ignoreFilesWithoutCode?: boolean;
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/web-api": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/dom": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                allowExpressions: boolean;
            }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings$2: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare namespace recommendedConfig {
  export { name$2 as name, plugins$2 as plugins, rules$2 as rules, settings$2 as settings };
}

declare const name$1 = "@eslint-react/recommended-type-checked";
declare const rules$1: {
    readonly "@eslint-react/no-leaked-conditional-rendering": "warn";
    readonly "@eslint-react/dom/no-unknown-property": "off";
    readonly "@eslint-react/no-duplicate-jsx-props": "off";
    readonly "@eslint-react/use-jsx-vars": "off";
    readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
    readonly "@eslint-react/hooks-extra/no-useless-custom-hooks": "warn";
    readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
    readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
    readonly "@eslint-react/web-api/no-leaked-interval": "warn";
    readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
    readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
    readonly "@eslint-react/dom/no-find-dom-node": "error";
    readonly "@eslint-react/dom/no-missing-button-type": "warn";
    readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-namespace": "error";
    readonly "@eslint-react/dom/no-render-return-value": "error";
    readonly "@eslint-react/dom/no-script-url": "warn";
    readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
    readonly "@eslint-react/dom/no-void-elements-with-children": "warn";
    readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
    readonly "@eslint-react/no-access-state-in-setstate": "error";
    readonly "@eslint-react/no-array-index-key": "warn";
    readonly "@eslint-react/no-children-count": "warn";
    readonly "@eslint-react/no-children-for-each": "warn";
    readonly "@eslint-react/no-children-map": "warn";
    readonly "@eslint-react/no-children-only": "warn";
    readonly "@eslint-react/no-children-to-array": "warn";
    readonly "@eslint-react/no-clone-element": "warn";
    readonly "@eslint-react/no-comment-textnodes": "warn";
    readonly "@eslint-react/no-component-will-mount": "error";
    readonly "@eslint-react/no-component-will-receive-props": "error";
    readonly "@eslint-react/no-component-will-update": "error";
    readonly "@eslint-react/no-context-provider": "warn";
    readonly "@eslint-react/no-create-ref": "error";
    readonly "@eslint-react/no-default-props": "error";
    readonly "@eslint-react/no-direct-mutation-state": "error";
    readonly "@eslint-react/no-duplicate-key": "error";
    readonly "@eslint-react/no-forward-ref": "warn";
    readonly "@eslint-react/no-implicit-key": "warn";
    readonly "@eslint-react/no-missing-key": "error";
    readonly "@eslint-react/no-nested-components": "error";
    readonly "@eslint-react/no-prop-types": "error";
    readonly "@eslint-react/no-redundant-should-component-update": "error";
    readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
    readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
    readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
    readonly "@eslint-react/no-string-refs": "error";
    readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
    readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
    readonly "@eslint-react/no-unsafe-component-will-update": "warn";
    readonly "@eslint-react/no-unstable-context-value": "warn";
    readonly "@eslint-react/no-unstable-default-props": "warn";
    readonly "@eslint-react/no-unused-class-component-members": "warn";
    readonly "@eslint-react/no-unused-state": "warn";
};
declare const plugins$1: {
    "@eslint-react/debug": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/hooks-extra": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-useless-custom-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-callback-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/naming-convention": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [("CONSTANT_CASE" | "PascalCase") | {
                allowAllCaps?: boolean;
                allowLeadingUnderscore?: boolean;
                allowNamespace?: boolean;
                excepts?: readonly string[];
                rule?: "CONSTANT_CASE" | "PascalCase";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | {
                excepts?: readonly string[];
                extensions?: readonly string[];
                rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [("always" | "as-needed") | {
                allow?: "always" | "as-needed";
                extensions?: readonly string[];
                ignoreFilesWithoutCode?: boolean;
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/web-api": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/dom": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                allowExpressions: boolean;
            }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings$1: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare namespace recommendedTypeCheckedConfig {
  export { name$1 as name, plugins$1 as plugins, rules$1 as rules, settings$1 as settings };
}

declare const name = "@eslint-react/recommended-typescript";
declare const rules: {
    readonly "@eslint-react/dom/no-unknown-property": "off";
    readonly "@eslint-react/no-duplicate-jsx-props": "off";
    readonly "@eslint-react/use-jsx-vars": "off";
    readonly "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn";
    readonly "@eslint-react/hooks-extra/no-useless-custom-hooks": "warn";
    readonly "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn";
    readonly "@eslint-react/web-api/no-leaked-event-listener": "warn";
    readonly "@eslint-react/web-api/no-leaked-interval": "warn";
    readonly "@eslint-react/web-api/no-leaked-resize-observer": "warn";
    readonly "@eslint-react/web-api/no-leaked-timeout": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml": "warn";
    readonly "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error";
    readonly "@eslint-react/dom/no-find-dom-node": "error";
    readonly "@eslint-react/dom/no-missing-button-type": "warn";
    readonly "@eslint-react/dom/no-missing-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-namespace": "error";
    readonly "@eslint-react/dom/no-render-return-value": "error";
    readonly "@eslint-react/dom/no-script-url": "warn";
    readonly "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn";
    readonly "@eslint-react/dom/no-unsafe-target-blank": "warn";
    readonly "@eslint-react/dom/no-void-elements-with-children": "warn";
    readonly "@eslint-react/ensure-forward-ref-using-ref": "warn";
    readonly "@eslint-react/no-access-state-in-setstate": "error";
    readonly "@eslint-react/no-array-index-key": "warn";
    readonly "@eslint-react/no-children-count": "warn";
    readonly "@eslint-react/no-children-for-each": "warn";
    readonly "@eslint-react/no-children-map": "warn";
    readonly "@eslint-react/no-children-only": "warn";
    readonly "@eslint-react/no-children-to-array": "warn";
    readonly "@eslint-react/no-clone-element": "warn";
    readonly "@eslint-react/no-comment-textnodes": "warn";
    readonly "@eslint-react/no-component-will-mount": "error";
    readonly "@eslint-react/no-component-will-receive-props": "error";
    readonly "@eslint-react/no-component-will-update": "error";
    readonly "@eslint-react/no-context-provider": "warn";
    readonly "@eslint-react/no-create-ref": "error";
    readonly "@eslint-react/no-default-props": "error";
    readonly "@eslint-react/no-direct-mutation-state": "error";
    readonly "@eslint-react/no-duplicate-key": "error";
    readonly "@eslint-react/no-forward-ref": "warn";
    readonly "@eslint-react/no-implicit-key": "warn";
    readonly "@eslint-react/no-missing-key": "error";
    readonly "@eslint-react/no-nested-components": "error";
    readonly "@eslint-react/no-prop-types": "error";
    readonly "@eslint-react/no-redundant-should-component-update": "error";
    readonly "@eslint-react/no-set-state-in-component-did-mount": "warn";
    readonly "@eslint-react/no-set-state-in-component-did-update": "warn";
    readonly "@eslint-react/no-set-state-in-component-will-update": "warn";
    readonly "@eslint-react/no-string-refs": "error";
    readonly "@eslint-react/no-unsafe-component-will-mount": "warn";
    readonly "@eslint-react/no-unsafe-component-will-receive-props": "warn";
    readonly "@eslint-react/no-unsafe-component-will-update": "warn";
    readonly "@eslint-react/no-unstable-context-value": "warn";
    readonly "@eslint-react/no-unstable-default-props": "warn";
    readonly "@eslint-react/no-unused-class-component-members": "warn";
    readonly "@eslint-react/no-unused-state": "warn";
};
declare const plugins: {
    "@eslint-react/debug": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly hook: _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/hooks-extra": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-useless-custom-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-callback-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/naming-convention": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly [("CONSTANT_CASE" | "PascalCase") | {
                allowAllCaps?: boolean;
                allowLeadingUnderscore?: boolean;
                allowNamespace?: boolean;
                excepts?: readonly string[];
                rule?: "CONSTANT_CASE" | "PascalCase";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly filename: _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly [("PascalCase" | "camelCase" | "kebab-case" | "snake_case") | {
                excepts?: readonly string[];
                extensions?: readonly string[];
                rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly [("always" | "as-needed") | {
                allow?: "always" | "as-needed";
                extensions?: readonly string[];
                ignoreFilesWithoutCode?: boolean;
            } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/web-api": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react/dom": {
        readonly meta: {
            readonly name: string;
            readonly version: string;
        };
        readonly rules: {
            readonly "no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            readonly "no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
    "@eslint-react": {
        meta: {
            name: string;
            version: string;
        };
        rules: {
            "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
                allowExpressions: boolean;
            }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
            "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        };
    };
};
declare const settings: {
    "react-x": {
        readonly additionalHooks: {
            readonly useLayoutEffect: ["useIsomorphicLayoutEffect"];
        };
        readonly polymorphicPropName: "as";
        readonly strictImportCheck: false;
        readonly version: "detect";
    };
};

declare const recommendedTypeScriptConfig_name: typeof name;
declare const recommendedTypeScriptConfig_plugins: typeof plugins;
declare const recommendedTypeScriptConfig_rules: typeof rules;
declare const recommendedTypeScriptConfig_settings: typeof settings;
declare namespace recommendedTypeScriptConfig {
  export { recommendedTypeScriptConfig_name as name, recommendedTypeScriptConfig_plugins as plugins, recommendedTypeScriptConfig_rules as rules, recommendedTypeScriptConfig_settings as settings };
}

declare const _default: {
    readonly meta: {
        readonly name: string;
        readonly version: string;
    };
    readonly configs: {
        readonly all: typeof allConfig;
        readonly core: typeof coreConfig;
        readonly debug: typeof debugConfig;
        readonly "disable-debug": typeof disableDebugConfig;
        readonly "disable-dom": typeof disableDomConfig;
        readonly "disable-type-checked": typeof disableTypeCheckedConfig;
        readonly "disable-web-api": typeof disableWebApiConfig;
        readonly dom: typeof domConfig;
        readonly off: typeof offConfig;
        readonly recommended: typeof recommendedConfig;
        readonly "recommended-type-checked": typeof recommendedTypeCheckedConfig;
        readonly "recommended-typescript": typeof recommendedTypeScriptConfig;
        readonly "all-legacy": Omit<typeof allConfig, "name"> & {
            plugins: string[];
        };
        readonly "core-legacy": Omit<typeof coreConfig, "name"> & {
            plugins: string[];
        };
        readonly "debug-legacy": Omit<typeof debugConfig, "name"> & {
            plugins: string[];
        };
        readonly "disable-debug-legacy": Omit<typeof disableDebugConfig, "name"> & {
            plugins: string[];
        };
        readonly "disable-dom-legacy": Omit<typeof disableDomConfig, "name"> & {
            plugins: string[];
        };
        readonly "disable-type-checked-legacy": Omit<typeof disableTypeCheckedConfig, "name"> & {
            plugins: string[];
        };
        readonly "disable-web-api-legacy": Omit<typeof disableWebApiConfig, "name"> & {
            plugins: string[];
        };
        readonly "dom-legacy": Omit<typeof domConfig, "name"> & {
            plugins: string[];
        };
        readonly "off-legacy": Omit<typeof offConfig, "name"> & {
            plugins: string[];
        };
        readonly "recommended-legacy": Omit<typeof recommendedConfig, "name"> & {
            plugins: string[];
        };
        readonly "recommended-type-checked-legacy": Omit<typeof recommendedTypeCheckedConfig, "name"> & {
            plugins: string[];
        };
        readonly "recommended-typescript-legacy": Omit<typeof recommendedTypeScriptConfig, "name"> & {
            plugins: string[];
        };
        /** @deprecated Use `disable-dom` instead */
        readonly "off-dom": typeof disableDomConfig;
        /** @deprecated Use `disable-dom-legacy` instead */
        readonly "off-dom-legacy": Omit<typeof disableDomConfig, "name"> & {
            plugins: string[];
        };
    };
    readonly rules: {
        readonly "debug/class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"classComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/function-component": _typescript_eslint_utils_ts_eslint.RuleModule<"functionComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/hook": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/is-from-react": _typescript_eslint_utils_ts_eslint.RuleModule<"isFromReact", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "debug/react-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"hook", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/component-name": _typescript_eslint_utils_ts_eslint.RuleModule<"componentName", readonly ["CONSTANT_CASE" | "PascalCase" | {
            allowAllCaps?: boolean;
            allowLeadingUnderscore?: boolean;
            allowNamespace?: boolean;
            excepts?: readonly string[];
            rule?: "CONSTANT_CASE" | "PascalCase";
        } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/filename": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameCaseMismatchSuggestion" | "filenameEmpty", readonly ["PascalCase" | "camelCase" | "kebab-case" | "snake_case" | {
            excepts?: readonly string[];
            extensions?: readonly string[];
            rule?: "PascalCase" | "camelCase" | "kebab-case" | "snake_case";
        } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/filename-extension": _typescript_eslint_utils_ts_eslint.RuleModule<"filenameExtensionInvalid" | "filenameExtensionUnexpected", readonly ["always" | "as-needed" | {
            allow?: "always" | "as-needed";
            extensions?: readonly string[];
            ignoreFilesWithoutCode?: boolean;
        } | undefined], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "naming-convention/use-state": _typescript_eslint_utils_ts_eslint.RuleModule<"useState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-direct-set-state-in-use-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-direct-set-state-in-use-layout-effect": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectSetStateInUseLayoutEffect", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-unnecessary-use-callback": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-unnecessary-use-memo": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-useless-custom-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/prefer-use-state-lazy-initialization": _typescript_eslint_utils_ts_eslint.RuleModule<"preferUseStateLazyInitialization", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/ensure-custom-hooks-using-other-hooks": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/ensure-use-callback-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseCallback", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/ensure-use-memo-has-non-empty-deps": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnnecessaryUseMemo", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "hooks-extra/no-redundant-custom-hook": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessCustomHooks", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-event-listener": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedEventListenerInEffect" | "noLeakedEventListenerInLifecycle" | "noLeakedEventListenerOfInlineFunction", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-interval": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedIntervalInEffect" | "noLeakedIntervalInLifecycle" | "noLeakedIntervalNoIntervalId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-resize-observer": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedResizeObserver" | "noLeakedResizeObserverInControlFlow" | "noLeakedResizeObserverNoFloatingInstance", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "web-api/no-leaked-timeout": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedTimeoutInEffect" | "noLeakedTimeoutInLifecycle" | "noLeakedTimeoutNoTimeoutId", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-dangerously-set-innerhtml": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtml", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-dangerously-set-innerhtml-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noDangerouslySetInnerhtmlWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-find-dom-node": _typescript_eslint_utils_ts_eslint.RuleModule<"noFindDomNode", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-missing-button-type": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingButtonType", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-missing-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-namespace": _typescript_eslint_utils_ts_eslint.RuleModule<"noNamespace", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-render-return-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noRenderReturnValue", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-script-url": _typescript_eslint_utils_ts_eslint.RuleModule<"noScriptUrl", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unknown-property": _typescript_eslint_utils_ts_eslint.RuleModule<string, [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unsafe-iframe-sandbox": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeIframeSandbox", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-unsafe-target-blank": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeTargetBlank", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-void-elements-with-children": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "dom/no-children-in-void-dom-elements": _typescript_eslint_utils_ts_eslint.RuleModule<"noVoidElementsWithChildren", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "avoid-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "avoid-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"avoidShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "ensure-forward-ref-using-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"ensureForwardRefUsingRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-access-state-in-setstate": _typescript_eslint_utils_ts_eslint.RuleModule<"noAccessStateInSetstate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-array-index-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noArrayIndexKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-count": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenCount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-for-each": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenForEach", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-map": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenMap", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-only": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenOnly", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-prop": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenProp", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-children-to-array": _typescript_eslint_utils_ts_eslint.RuleModule<"noChildrenToArray", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-class-component": _typescript_eslint_utils_ts_eslint.RuleModule<"noClassComponent", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-clone-element": _typescript_eslint_utils_ts_eslint.RuleModule<"noCloneElement", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-comment-textnodes": _typescript_eslint_utils_ts_eslint.RuleModule<"noCommentTextnodes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-complex-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-context-provider": _typescript_eslint_utils_ts_eslint.RuleModule<"noContextProvider", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-create-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noCreateRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-direct-mutation-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noDirectMutationState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-duplicate-jsx-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-duplicate-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-forward-ref": _typescript_eslint_utils_ts_eslint.RuleModule<"noForwardRef", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-implicit-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noImplicitKey", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-leaked-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noLeakedConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-missing-component-display-name": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingComponentDisplayName", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-missing-key": _typescript_eslint_utils_ts_eslint.RuleModule<"noMissingKey" | "noMissingKeyWithFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-nested-components": _typescript_eslint_utils_ts_eslint.RuleModule<"nestedComponent" | "nestedComponentInProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-prop-types": _typescript_eslint_utils_ts_eslint.RuleModule<"noPropTypes", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-redundant-should-component-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noRedundantShouldComponentUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-did-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-did-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentDidUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-set-state-in-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noSetStateInComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-string-refs": _typescript_eslint_utils_ts_eslint.RuleModule<"noStringRefs", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-mount": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillMount", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-receive-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillReceiveProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unsafe-component-will-update": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnsafeComponentWillUpdate", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unstable-context-value": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableContextValue" | "noUnstableContextValueWithFunction" | "noUnstableContextValueWithIdentifier", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unstable-default-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnstableDefaultProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unused-class-component-members": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedClassComponentMembers", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-unused-state": _typescript_eslint_utils_ts_eslint.RuleModule<"noUnusedState", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-useless-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"noUselessFragment" | "noUselessFragmentInBuiltIn", [{
            allowExpressions: boolean;
        }], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-destructuring-assignment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferDestructuringAssignment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-react-namespace-import": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReactNamespaceImport", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-read-only-props": _typescript_eslint_utils_ts_eslint.RuleModule<"preferReadOnlyProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-shorthand-boolean": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandBoolean", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "prefer-shorthand-fragment": _typescript_eslint_utils_ts_eslint.RuleModule<"preferShorthandFragment", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "use-jsx-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "jsx-no-duplicate-props": _typescript_eslint_utils_ts_eslint.RuleModule<"noDuplicateJsxProps", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "jsx-uses-vars": _typescript_eslint_utils_ts_eslint.RuleModule<"useJsxVars", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
        readonly "no-complicated-conditional-rendering": _typescript_eslint_utils_ts_eslint.RuleModule<"noComplexConditionalRendering", [], unknown, _typescript_eslint_utils_ts_eslint.RuleListener>;
    };
};

export { _default as default };
